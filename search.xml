<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何搭建中转服务器</title>
      <link href="/2025/07/12/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AD%E8%BD%AC%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2025/07/12/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AD%E8%BD%AC%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>上中转的意义是什么，最常见的无非就是拉延迟，拉速度。</p><p>中转前：<strong>用户 → 节点服务器</strong><br>中转后：<strong>用户 → 中转服务器（中转鸡）→ 节点服务器（落地鸡）</strong></p><p>可能有人看到这里会觉得多一个服务器会拉低速度，为什么要加，可以举个例子，比如，节点服务器的ip是纯净的原生住宅ip，但是回程线路绕来绕去，速度很慢。而中转服务器带宽高，并且跟节点服务器ping值低，连接速度也很好，这个时候就最适合上中转。并不是所有都适合上中转的，如果中转服务器带宽低，且跟节点服务器连接不好，就不适合中转。中转服务器尽量选国内的，带宽高并且与节点服务器连接好。便宜的方案可以选国内大带宽的nat。</p><p>并不一定说中转就得买国内的。<br>假设你的节点服务器在美国，回程线路：绕欧洲再到澳洲最后回到国内。<br>此时有另一个日本服务器，美国服务器回程日本服务器是直连，并且日本回程国内也是直连。<br>这个日本服务器是最适合做中转，拉一下延迟和速度的。</p><p>扒拉了一大堆，还是上教程吧</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>落地鸡是你原有的节点服务器</p><p>我现在随便用两台服务器做教程好了，如果落地鸡已经配置好节点后，直接配置中转鸡就好了</p><p>中转鸡：日本-地址：<code>jp.qyyx.eu.org</code>，端口：<code>12345</code>，协议：<code>dokodemo-door</code><br>落地鸡：洛杉矶-地址：<code>us.qyyx.eu.org</code>，端口：<code>54321</code>，协议：任意</p><h3 id="落地鸡配置："><a href="#落地鸡配置：" class="headerlink" title="落地鸡配置："></a>落地鸡配置：</h3><p>洛杉矶落地鸡地址：<code>us.qyyx.eu.org</code></p><p>落地鸡随便添加一个入站，然后记下端口：<code>54321</code></p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752314959-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752314959-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>导入v2后测试一下延迟：201ms</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752314898-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752314898-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315766-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315766-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h3 id="中转鸡配置"><a href="#中转鸡配置" class="headerlink" title="中转鸡配置"></a>中转鸡配置</h3><p>打开日本中转鸡的3x-ui面板，地址：<code>jp.qyyx.eu.org</code></p><p>在中转鸡添加一个入站，协议：<code>dokodemo-door</code>，然后随便填一个端口<code>12345</code><br>下面目标地址和目标端口，填落地鸡的入站地址<code>us.qyyx.eu.org</code>和端口<code>54321</code></p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315068-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315068-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>打开v2，直接改先前导入的落地鸡节点信息，只需要把地址改成中转鸡的入站地址和端口就可以了，除了别名是可以随便改，其他都不用动。</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315963-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315963-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>测试一下，这个时候已经是客户端跟中转鸡的延迟了</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315673-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752315673-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>这个时候就已经是成功配置好中转鸡了</p><p>原来：<br><strong>用户 → 落地：us.qyyx.eu.org:54321</strong></p><p>变成：<br><strong>用户 → 中转：jp.qyyx.eu,org:12345 → 落地：us.qyyx.eu.org:54321</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何在3-ui面板添加住宅IP</title>
      <link href="/2025/07/12/%E5%A6%82%E4%BD%95%E5%9C%A83-ui%E9%9D%A2%E6%9D%BF%E6%B7%BB%E5%8A%A0%E4%BD%8F%E5%AE%85IP/"/>
      <url>/2025/07/12/%E5%A6%82%E4%BD%95%E5%9C%A83-ui%E9%9D%A2%E6%9D%BF%E6%B7%BB%E5%8A%A0%E4%BD%8F%E5%AE%85IP/</url>
      
        <content type="html"><![CDATA[<p>有一些国外的东西可能需要比较纯净的环境来注册使用，比如Google Voice、Talkatone、Claude、Tiktok、Azure、海外版PayPal、阿里云国际站、亚马逊运营等等，都是需要比较纯净原生IP或者是住宅IP才能注册，不然注册了也很容易风控。如果是网页使用的，最理想的是指纹浏览器+住宅IP。</p><p>如果是第一次用的话，可能会有人直接拿着住宅IP信息在v2里添加使用，然后发现用不了，问了客服后才知道，是需要海外环境的，人在墙内的话是不能直接使用的。</p><p>现在就来说一下，怎么在3x-ui面板添加住宅IP。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>住宅IP有动态和静态的，一般都可以用socks或者http连接，购买后会显示IP地址、端口、用户名和密码。</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752245754-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752245754-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>打开3x-ui面板，可以新增入站节点也可以用原来的，你想用哪个入站节点就记住哪个端口号就行了，我这里选择<code>54321</code>端口的节点。</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752246629-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752246629-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>左边打开xray设置，添加一个出站规则，协议选择socks，标签随意填（要记住标签，我这里填<code>us-isp</code>），下面就填住宅IP的信息，最后确定。</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247077-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247077-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>还是xray设置这里，添加路由规则，<code>Inbound Tags</code>选择入站的端口（我用的<code>54321</code>端口），<code>Outbound Tag</code>选择刚刚出站规则填的那个标签（我这里是<code>us-isp</code>），然后确定</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752246789-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752246789-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>添加完出站规则，路由规则后，一定要点保存，再点重新启动xray</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247303-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247303-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>导入节点测试一下（如果是用原有的入站节点就不用重新导入）</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247583-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247583-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>打开一个网站看看IP有没有变，可以看到这个IP已经变成了那个住宅IP</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247382-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752247382-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h2 id="查询是否是住宅IP"><a href="#查询是否是住宅IP" class="headerlink" title="查询是否是住宅IP"></a>查询是否是住宅IP</h2><p>美国家庭IP：64.0.113.113，自己可以对比一下</p><p><a href="https://ipinfo.io/">https://ipinfo.io</a>家宽的话，ASN type会显示ISP</p><p><a href="https://ping0.cc/">https://ping0.cc</a></p><p><a href="https://iplark.com/">https://iplark.com</a></p><p><a href="https://ipjiance.com/">https://ipjiance.com</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>用3x-ui搭建reality</title>
      <link href="/2025/07/08/%E7%94%A83x-ui%E6%90%AD%E5%BB%BAreality/"/>
      <url>/2025/07/08/%E7%94%A83x-ui%E6%90%AD%E5%BB%BAreality/</url>
      
        <content type="html"><![CDATA[<p>这篇文章很久之前就写了，但一直放在wordpress博客的草稿里不敢发布。原因是去年我wp博客突然被下备案了，什么原因都没有告知，后面打电话问了管局才知道是因为博客存在搭建VPN、翻墙教程，被工信部永久拉入黑名单了（呜呜呜，5年的备案域名，收录还这么多就这样没了）。今天突然想起还有hexo博客，就索性在这里发布算了。</p><p>Reality协议的优势：</p><ul><li><strong>消除TLS指纹</strong>：通过伪装成普通的HTTPS流量，Reality协议避免了被特定TLS特征识别的风险。</li><li><strong>前向保密性</strong>：确保即使私钥泄露，之前的通信内容也无法被解密。</li><li><strong>无需自有域名</strong>：可以指向任何支持TLS 1.3和H2的网站，无需购买或配置自己的域名。</li><li><strong>不受端口限制</strong>：可以使用非443端口，增加了部署的灵活性。</li></ul><p>reality在流行代理协议中是最强的，强于TLS，至于会不会被GFW封，目前没有收到大规模报告。如果流量大了，还是会封的。</p><p>多的就不写了（下面的教程比较简略），别到时候把这博客给整墙了</p><p>建议debian12系统</p><h2 id="面板安装脚本"><a href="#面板安装脚本" class="headerlink" title="面板安装脚本"></a>面板安装脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 3x-ui（伊朗的，功能多，推荐）</span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)</span><br><span class="line"></span><br><span class="line"># x-ui（原版，停更）</span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh</span><br><span class="line"># x-ui（二改）</span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br><span class="line"># x-ui（二改）</span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/yonggekkk/x-ui-yg/main/install.sh)</span><br></pre></td></tr></table></figure><h2 id="给面板加SSL（可忽略，但强烈建议设置）"><a href="#给面板加SSL（可忽略，但强烈建议设置）" class="headerlink" title="给面板加SSL（可忽略，但强烈建议设置）"></a>给面板加SSL（可忽略，但强烈建议设置）</h2><p>安装cf证书，需要cf上有域名</p><p>解析一个A记录的域名到服务器ip</p><p>然后打开个人资料：<a href="https://dash.cloudflare.com/profile/api-tokens">https://dash.cloudflare.com/profile/api-tokens</a>，找到Global API Key复制下来</p><p>在ssh终端输入x-ui，输入19（Cloudflare SSL Certificate），然后接着输入解析的域名，cf的key，邮箱，一直按着执行下去就会出现面板地址了（如果忘记了，脚本命令第10就是面板信息）</p><h2 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h2><p>打开面板，直接上配置图</p><p>Dest和SNI填一个支持H2，且ping值低的网站填上去（要用服务器ping该网站），注意别漏:443</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2025/07/1752135943-image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2025/07/1752135943-image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h2 id="如何寻找-TLS1-3-H2-的网站"><a href="#如何寻找-TLS1-3-H2-的网站" class="headerlink" title="如何寻找 TLS1.3/H2 的网站"></a>如何寻找 TLS1.3/H2 的网站</h2><ul><li>目标网站最低标准：国外网站，支持 TLSv1.3 与 H2，域名非跳转用</li><li>加分项：IP 相近（更像，且延迟低），Server Hello 后的握手消息一起加密（如 dl.google.com），有 OCSP Stapling</li><li>配置加分项：禁回国流量，TCP/80、UDP/443 也转发（REALITY 对外表现即为端口转发，目标 IP 冷门或许更好）</li></ul><p>查询目标网站是否支持 <code>OCSP Stapling</code>：<a href="http://web.chacuo.net/netocspstapling">http://web.chacuo.net/netocspstapling</a></p><p>TLS1.3 / X25519 / H2：<a href="https://www.ssllabs.com/ssltest/index.html">https://www.ssllabs.com/ssltest/index.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 域名推荐</span><br><span class="line">gateway.icloud.com</span><br><span class="line">itunes.apple.com</span><br><span class="line">download-installer.cdn.mozilla.net</span><br><span class="line">airbnb【这个不同的区有不同的域名建议自己搜索】</span><br><span class="line">addons.mozilla.org</span><br><span class="line">www.microsoft.com</span><br><span class="line">www.lovelive-anime.jp</span><br><span class="line"></span><br><span class="line"># CDN</span><br><span class="line">Apple:</span><br><span class="line">swdist.apple.com</span><br><span class="line">swcdn.apple.com</span><br><span class="line">updates.cdn-apple.com</span><br><span class="line">mensura.cdn-apple.com</span><br><span class="line">osxapps.itunes.apple.com</span><br><span class="line">aod.itunes.apple.com</span><br><span class="line"></span><br><span class="line">Microsoft:</span><br><span class="line">cdn-dynmedia-1.microsoft.com</span><br><span class="line">update.microsoft</span><br><span class="line">software.download.prss.microsoft.com</span><br><span class="line"></span><br><span class="line">Amazon:</span><br><span class="line">s0.awsstatic.com</span><br><span class="line">d1.awsstatic.com</span><br><span class="line">images-na.ssl-images-amazon.com</span><br><span class="line">m.media-amazon.com</span><br><span class="line">player.live-video.net</span><br><span class="line"></span><br><span class="line">Google:</span><br><span class="line">dl.google.com</span><br></pre></td></tr></table></figure><p>到这里已经全部配置完了，下面是其他设置，可以不用看</p><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><h3 id="更新软件库"><a href="#更新软件库" class="headerlink" title="更新软件库"></a>更新软件库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 更新软件包列表</span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"># 升级已安装的软件包</span><br><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><p>Debian12更换镜像源</p><p>备份：<code>mv /etc/apt/sources.list /etc/apt/sources.list.old</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 官方源</span><br><span class="line">cat &gt; /etc/apt/sources.list &lt;&lt; EOF</span><br><span class="line">deb https://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://deb.debian.org/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line">deb https://deb.debian.org/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://deb.debian.org/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line">deb https://deb.debian.org/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://deb.debian.org/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line">deb https://deb.debian.org/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://deb.debian.org/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 清华源 https://mirrors.tuna.tsinghua.edu.cn/help/debian/</span><br><span class="line">cat &gt; /etc/apt/sources.list &lt;&lt; EOF</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 阿里云源</span><br><span class="line">cat &gt; /etc/apt/sources.list &lt;&lt; EOF</span><br><span class="line">deb http://mirrors.cloud.aliyuncs.com/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line">deb-src http://mirrors.cloud.aliyuncs.com/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line">deb http://mirrors.cloud.aliyuncs.com/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line">deb-src http://mirrors.cloud.aliyuncs.com/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line">deb http://mirrors.cloud.aliyuncs.com/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line">deb-src http://mirrors.cloud.aliyuncs.com/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line">deb http://mirrors.cloud.aliyuncs.com/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class="line">deb-src http://mirrors.cloud.aliyuncs.com/debian-security/ bookworm-security main contrib non-free non-free-firmware</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu防火墙</span><br><span class="line"># 查看防火墙状态</span><br><span class="line">sudo ufw status</span><br><span class="line"></span><br><span class="line"># 开启防火墙</span><br><span class="line">sudo ufw enable</span><br><span class="line"></span><br><span class="line"># 永久关闭</span><br><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">centos防火墙</span><br><span class="line"># 查看防火墙状态</span><br><span class="line">systemctl status firewalld</span><br><span class="line"></span><br><span class="line"># 开启命令</span><br><span class="line">systemctl start firewalld</span><br><span class="line"></span><br><span class="line"># 永久关闭</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><h3 id="绑定多IP"><a href="#绑定多IP" class="headerlink" title="绑定多IP"></a>绑定多IP</h3><p>Debian</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 编辑，也有可能在network文件夹下</span><br><span class="line">vim /etc/network/interfaces</span><br><span class="line"></span><br><span class="line"># 重启网络</span><br><span class="line">systemctl restart networking</span><br><span class="line"></span><br><span class="line"># 查看生效</span><br><span class="line">ip route</span><br></pre></td></tr></table></figure><p>Ubuntu</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 配置文件在这个路径下，ls看一下</span><br><span class="line">vim /etc/netplan/</span><br><span class="line"></span><br><span class="line"># 应用配置</span><br><span class="line">netplan apply</span><br><span class="line"></span><br><span class="line"># 查看是否生效</span><br><span class="line">ip route</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows搭建v2服务端</title>
      <link href="/2023/12/08/Windows%E6%90%AD%E5%BB%BAv2%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
      <url>/2023/12/08/Windows%E6%90%AD%E5%BB%BAv2%E6%9C%8D%E5%8A%A1%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>网上搭建代理的教程大部分都是在Linux环境下搭建的，在Windows下搭建教程就比较少，因为这种行为纯粹就是脱裤子放屁，既然是Windows，为什么不直接用？</p><p>所以此教程针对Azure学生订阅的Windows。玩过Azure学生订阅的知道，有一个免费的1h1g的win服务器(b1s配置)，然而1g内存装win的话是不够用的，打开个浏览器都能给你成ppt，更别说上网干嘛了。GUI版的话除了能挂个探针，就没什么能做的了，当然1g内存安装Server Core版还是很丝滑的，但这样的话还不如直接用Linux。</p><p>现在Azure已经不能直接开server2012了，最低server2016。想安装2012的话可以用cli创建，但创建出来的是静态ip，静态ip要额外扣费的，所以想没有额外费用的话就安装2016吧，如果你熟练powershell的话可以尝试Server Core版。</p><p>服务端：搭建v2节点的服务器<br>客户端：你本地的手机或电脑</p><p>方法：在win服务器下载v2ray-core解压，然后在客户端添加一个vmess再导出配置文件(config.json)，把导出配置文件替换服务端的配置文件，最后运行服务端的wv2ray.exe</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p>本人亲自测试Windows server 2012、2016和2019都可以搭建v2ray服务端，并且国内外的服务器都可以搭建</p><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><p>下载地址：<a href="https://github.com/2dust/v2rayN/releases">https://github.com/2dust/v2rayN/releases</a></p><p>首先，在你本地电脑的v2rayN上生成一个VMess服务器</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>看图中提示填入信息</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-1.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>我以前用v5.93版的v2rayN时是有导出服务端配置的，现在用v6.31版就没有了，所以只能复制粘贴。</p><h3 id="服务端："><a href="#服务端：" class="headerlink" title="服务端："></a>服务端：</h3><p>关闭windows服务器的防火墙。<br>打开控制面板，找到防火墙设置，关闭</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/12/image-4.png"><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-4.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/12/image-6.png"><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-6.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/12/image-7.png"><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-7.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/12/image-5.png"><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-5.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>接下来是把v2服务端的压缩包下载到服务器里</p><p>本次直接在服务器下载v4.28.2版：<a href="https://github.com/v2fly/v2ray-core/releases/download/v4.28.2/v2ray-windows-64.zip">https://github.com/v2fly/v2ray-core/releases/download/v4.28.2/v2ray-windows-64.zip</a><br>新版我没测试，我测试v4.28.2是可以使用的。可以先在本地电脑下载v2ray-windows-64.zip，然后远程连接服务器后，再把压缩包复制粘贴进去。</p><p>在服务器桌面新建个文件夹 —&gt; 解压进去 —&gt;<br>右键用记事本打开解压后的<code>config.json</code>文件 —&gt; 删除里面全部内容 —&gt;<br>然后复制下面配置文件内容进去 —&gt; 保存 —&gt; 双击运行<code>wv2ray.exe</code></p><p>==下面配置文件中用户id和端口填刚才在电脑v2rayN生成的==</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;log&quot;: &#123;</span><br><span class="line">    &quot;access&quot;: &quot;&quot;,</span><br><span class="line">    &quot;error&quot;: &quot;&quot;,</span><br><span class="line">    &quot;loglevel&quot;: &quot;warning&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 22222,</span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;udp&quot;: false,</span><br><span class="line">        &quot;clients&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;id&quot;: &quot;7e86ba1b-88e4-40d9-a8ae-a007125sw51b&quot;,</span><br><span class="line">            &quot;alterId&quot;: 0,</span><br><span class="line">            &quot;email&quot;: &quot;t@t.tt&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;allowTransparent&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;streamSettings&quot;: &#123;</span><br><span class="line">        &quot;network&quot;: &quot;tcp&quot;,</span><br><span class="line">        &quot;tcpSettings&quot;: &#123;</span><br><span class="line">          &quot;header&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;http&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;freedom&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;tag&quot;: &quot;block&quot;,</span><br><span class="line">      &quot;protocol&quot;: &quot;blackhole&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;routing&quot;: &#123;</span><br><span class="line">    &quot;domainStrategy&quot;: &quot;IPIfNonMatch&quot;,</span><br><span class="line">    &quot;rules&quot;: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-2.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>最后回到客户端就可以连接了</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2023/12/image-8.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/12/image-8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>推荐几个免费图床</title>
      <link href="/2023/07/13/%E6%8E%A8%E8%8D%90%E5%87%A0%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
      <url>/2023/07/13/%E6%8E%A8%E8%8D%90%E5%87%A0%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<p>最近频繁使用到图床，搜集了自己使用过的比较好用的图床网站，有知名大站也有小众网站，使用体验都不错</p><p>排名不分先后</p><h2 id="有备案域名"><a href="#有备案域名" class="headerlink" title="有备案域名"></a>有备案域名</h2><p>有备案域名的先看这里，没有的往下拉</p><h3 id="七牛"><a href="#七牛" class="headerlink" title="七牛"></a>七牛</h3><p>地址：<a href="https://www.qiniu.com/prices/kodo">https://www.qiniu.com/prices/kodo</a></p><p>开通七牛云对象存储服务的实名认证用户，每月可享受一定量的标准存储免费存储空间、标准存储免费 CDN 回源流量和标准存储免费请求数目。</p><p>每月计费时，会先抵扣免费额度，超出部分再按照价格详情付费结算。</p><table><thead><tr><th>标准存储每月免费空间</th><th>标准存储每月免费 CDN 回源流量</th><th>标准存储每月免费写请求 PUT/DELETE</th><th>标准存储每月免费读请求 GET</th><th>每月免费上传流量</th></tr></thead><tbody><tr><td>10GB</td><td>10GB</td><td>10万次</td><td>100万次</td><td>无上限</td></tr></tbody></table><h3 id="青云QingCloud"><a href="#青云QingCloud" class="headerlink" title="青云QingCloud"></a>青云QingCloud</h3><p>地址：<a href="https://www.qingcloud.com/products/objectstorage/">https://www.qingcloud.com/products/objectstorage/</a></p><p>注册成功并完成认证的 QingStor 对象存储用户，青云QingCloud 为您提供一定额度的 QingStor 对象存储免费使用套餐。每个 Bucket 享有如下免费政策:</p><ul><li>标准存储空间：20 GB</li><li>总外网下载流量：10 GB</li><li>总外网读请求 (GET/HEAD)：100 万次</li><li>总外网写请求 (PUT/POST/DELETE)：10 万次</li></ul><h3 id="多吉云"><a href="#多吉云" class="headerlink" title="多吉云"></a>多吉云</h3><p>地址：<a href="https://www.dogecloud.com/price?product=oss">https://www.dogecloud.com/price?product=oss</a></p><p><strong>如果视频空间占用量小于 20 GB，则空间占用免费。如果当日的流量消耗大于当日的空间占用量，则空间占用免费</strong></p><p>举例来说，如果你视频云空间占用 40 GB，当日流量消耗 30 GB，那么你当日就有 30 GB 的存储免费额度，只需要对剩下 10 GB 进行计费。如果你空间占用在 20 GB 以下，不管你流量消耗多少，空间占用都是免费的。</p><table><thead><tr><th>视频云空间</th><th>空间网络基础</th><th>融合CDN</th><th>云存储</th></tr></thead><tbody><tr><td>0~ 20 GB</td><td>20 GB</td><td>20 GB</td><td>0~ 10 GB</td></tr></tbody></table><p>表格都是每个月免费的额度</p><h3 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h3><p>加入联盟地址：<a href="https://www.upyun.com/league">https://www.upyun.com/league</a></p><p>加入又拍云联盟的站长，需要将网站底部加上又拍云的LOGO，申请加入联盟，可以得到免费10GB存储空间和15GB每月流量，申请通过后又拍云会把上述资源折算成等额的代金券发放至账户中，并且一次性发放一年的代金券，面值67元。唯一不足的就是需要我们加上LOGO，如果被发现取消则会被取消资格，第二年依旧是免费续签。</p><h2 id="无备案域名"><a href="#无备案域名" class="headerlink" title="无备案域名"></a>无备案域名</h2><p>没有备案域名就看这栏吧</p><h3 id="sm-ms图床"><a href="#sm-ms图床" class="headerlink" title="sm.ms图床"></a>sm.ms图床</h3><p>中大陆只能访问这个地址了<a href="https://smms.app/">https://smms.app/</a></p><ul><li>优点：<ol><li>免费（5G的存储空间）；不用考虑流量问题。</li><li>网页端有预览功能。</li><li>上传后不可修改（不可重命名）。 对于外链url这算优点，保证了以往引用的的外链url不会失效。（<strong>它用的不是直链，实测重命名不会影响之前外链的url</strong>）</li></ol></li><li>缺点：<ol><li>使用PicGo上传有时会出现上传失败的情况，可能是网络原因？（后来使用体验好了很多。）。</li><li>可能会跑路？不过它在免费图床里算是最可靠的了。它跑路的概率肯定比下面的路过图床的概率低。</li><li>网有点慢。</li><li>有预览功能，但只是一列排开，（相较于下面的路过图床来说）没有相册那种形式方便。但也不错了。</li><li>上传时不可以重命名、不可以剪裁。（严格来说，这不算是缺点）。</li></ol></li></ul><h3 id="路过图床"><a href="#路过图床" class="headerlink" title="路过图床"></a>路过图床</h3><p>地址：<a href="https://imgse.com/">https://imgse.com/</a></p><p>介绍：比较知名的图床，用户使用较多的图床工具之一，个人认为是仅次于sm.ms的选择，毕竟已经自2011年运营至了。跑路的可能性不大。 但是不建议作为主力，虽然跑路的可能性不大，但还是有的。免费，但是页面有少量广告。高速稳定的图片上传和外链服务，全球CDN加速，最大单张支持 10 MB，支持批量上传。不过在上传之后，展现的预览和编辑，需要二次确认之后才能上传进行使用，有点繁琐。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="聚合图床"><a href="#聚合图床" class="headerlink" title="聚合图床"></a>聚合图床</h3><p>地址：<a href="https://www.superbed.cn/">https://www.superbed.cn/</a></p><p>介绍：聚合图床依托于七牛腾讯阿里云等，用户可以自己选择上传策略，上传图片：可选jpg/png/bmp/webp等所有支持的图片格式，可批量上传。没有流量限制、速度也可以，关键是不需要各种设置，很适合不爱折腾的朋友使用，上手难度很低，是目前图床的新势力。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-1.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-1.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="imgurl图床"><a href="#imgurl图床" class="headerlink" title="imgurl图床"></a>imgurl图床</h3><p>地址：<a href="https://www.imgurl.org/">https://www.imgurl.org/</a></p><ul><li>优点：<ol><li>免费。不用考虑存储费用和流量费用。</li></ol></li><li>缺点：<ol><li>难保不会跑路(可能性不大)。</li><li>上传数量受限制。每日20涨，每月400张。</li></ol></li></ul><h3 id="老王图床"><a href="#老王图床" class="headerlink" title="老王图床"></a>老王图床</h3><p>地址：<a href="https://img.gejiba.com/">https://img.gejiba.com/</a></p><p>介绍：无需注册，可以上传 JPG PNG BMP GIF WEBP 等格式，支是国内服务器和 CDN，图片加载速度教快。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-3.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-3.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="小鸭图床"><a href="#小鸭图床" class="headerlink" title="小鸭图床"></a>小鸭图床</h3><p>地址：<a href="http://image.kypeople.cn/">http://image.kypeople.cn/</a></p><p>介绍：依托于腾讯云储存与CDN加速，国内访问速度还可以，单个最大上传4M。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-5.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-5.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="TG图床"><a href="#TG图床" class="headerlink" title="TG图床"></a>TG图床</h3><p>地址：<a href="https://imgtg.com/">https://imgtg.com/</a></p><p>介绍：多年老图床，有国内百度云cdn节点加速，在上传测试中，GIF上传速度约 2 秒。图片上传限制：每个图片最大5M。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-6.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-6.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="moeto图床"><a href="#moeto图床" class="headerlink" title="moeto图床"></a>moeto图床</h3><p>地址：<a href="https://moetu.org/">https://moetu.org/</a></p><p>介绍：免费，图片上传限制：每个图片最大20M。moetu图床除了连接稳定上传外，还支持图片分类、搜索等功能。亲测网站打开有一些缓慢，。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-7.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-7.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="七喜图床"><a href="#七喜图床" class="headerlink" title="七喜图床"></a>七喜图床</h3><p>地址：<a href="https://7up.pics/">https://7up.pics/</a></p><p>介绍：一个小众图床，使用体验还可以，速度较快，单个最大上传5M。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-8.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-8.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="Z4A图床"><a href="#Z4A图床" class="headerlink" title="Z4A图床"></a>Z4A图床</h3><p>地址：<a href="https://www.z4a.net/">https://www.z4a.net/</a></p><p>介绍：需要注册才能使用，速度较快，支持 JPG PNG BMP GIF WEBP 等格式，照片最大可上传64M。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-9.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-9.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="图仓"><a href="#图仓" class="headerlink" title="图仓"></a>图仓</h3><p>地址：<a href="https://www.imagehub.cc/">https://www.imagehub.cc/</a></p><p>介绍：免费图片托管,专业图片外链,免费图床,公益图床,免费相册,支持相册加密,支持图片批量上传,原图保存,不限空间,不限流量。</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/05/image-10.png" title="推荐几个免费图床"><img src="https://blog.aerr.cn/wp-content/uploads/2023/05/image-10.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/05/image-10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一个hexo博客后台–Qexo</title>
      <link href="/2023/07/11/%E4%B8%80%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%8F%B0%E2%80%93Qexo/"/>
      <url>/2023/07/11/%E4%B8%80%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%8F%B0%E2%80%93Qexo/</url>
      
        <content type="html"><![CDATA[<p>Qexo，一个快速、美观、强大的在线hexo管理器，支持使用 Vercel 零成本一键部署,，您只需要配置一个免费数据库。特色功能：自定义图床上传图片，在线配置编辑，在线页面管理，开放 API，自动检查更新，在线一键更新，快速接入友情链接，简单的说说短文，类似不算子的统计，自动填文章模板</p><p>官方地址：</p><p>GitHub：<a href="https://github.com/Qexo/Qexo">https://github.com/Qexo/Qexo</a></p><p>文档：<a href="https://www.oplog.cn/qexo/">https://www.oplog.cn/qexo/</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是我前段时间浏览一些博客发现的hexo在线管理器，主要是ui看着比较舒服，既然hexo自动化部署已经搞上了，顺便把后台也搞一个吧</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>教程比较简单，跟着官方文档走就行了</p><p>我用的是Vercel 部署 (MySQL/PlanetScale)</p><h3 id="申请-PlanetScale-数据库（如果不能科学上网的请选择其他数据库）"><a href="#申请-PlanetScale-数据库（如果不能科学上网的请选择其他数据库）" class="headerlink" title="申请 PlanetScale 数据库（如果不能科学上网的请选择其他数据库）"></a>申请 PlanetScale 数据库（如果不能科学上网的请选择其他数据库）</h3><p><a href="https://www.planetscale.com/">注册 PlanetScale 账号</a> 创建免费 MySQL 数据库(==不支持大陆IP==), 区域<strong>一定要选择 AWS / N. Virginia (us-east-1)</strong>, 并记录数据库连接信息</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-16.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-16.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>复制下面全部数据库连接内容</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-15.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-15.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h3><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/am-abudu/Qexo"><img src="https://vercel.com/button" class="lazyload placeholder" data-srcset="https://vercel.com/button" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="部署到 Vercel"></a></p><p>直接点文档的deploy，再选择GitHub存储库</p><p>首次部署会报错, 请无视并重新进入项目, 在项目设置界面添加环境变量 Environment Variables</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-17.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-17.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>最终添加的变量内容如下</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-18.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-18.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><code>变量声明</code></p><table><thead><tr><th>名称</th><th>意义</th><th>示例</th></tr></thead><tbody><tr><td>MYSQL_HOST</td><td>MySQL 数据库连接地址</td><td>host的内容</td></tr><tr><td>MYSQL_PORT</td><td>MySQL 数据库通信端口 默认应填写 3306</td><td>3306</td></tr><tr><td>MYSQL_USER</td><td>MySQL 数据库用户名</td><td>username的内容</td></tr><tr><td>MYSQL_NAME</td><td>MySQL 数据库名</td><td>database的内容</td></tr><tr><td>MYSQL_PASSWORD</td><td>MySQL 数据库密码</td><td>password的内容</td></tr><tr><td>PLANETSCALE</td><td>(可选)用PlanetScale则设置为1</td><td>1</td></tr></tbody></table><h3 id="初始化引导"><a href="#初始化引导" class="headerlink" title="初始化引导"></a>初始化引导</h3><p>在 Deployments 点击 Redeploy 开始部署, 若没有 Error 信息即可打开域名进入初始化引导</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-20.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-20.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-19.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-19.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="Github-密钥"><a href="#Github-密钥" class="headerlink" title="Github 密钥"></a>Github 密钥</h3><p>于 <a href="https://github.com/settings/tokens">Github 设置</a> 生成的 Token (建议使用 Classic) 需要 Repo &amp; Workflow 下的权限 <em>不建议给出所有权限</em></p><p><code>ghp_P8xxxxxxxxxxxxxxxxxxxxxxx</code></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-21.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-21.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-21.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="Vercel密钥"><a href="#Vercel密钥" class="headerlink" title="Vercel密钥"></a>Vercel密钥</h3><p>您的 Vercel 账户密钥 在 <a href="https://vercel.com/account/tokens">此处</a> 生成</p><p><code>xxxxxxxxxxxxxxxxxxxxxxxx</code></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-23.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-23.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h3 id="项目ID"><a href="#项目ID" class="headerlink" title="项目ID"></a>项目ID</h3><p>Qexo 部署所在项目的 ID 位于项目的 Settings -&gt; General -&gt; Project ID</p><p><code>prj_xxxxxxxxxxxxx</code></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-24.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-24.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-24.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-14.png" title="一个hexo博客后台--Qexo"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-14.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>最终大功告成</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用Github Actions自动化部署 Hexo博客</title>
      <link href="/2023/07/11/%E5%88%A9%E7%94%A8Github%20Actions%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%20Hexo%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/07/11/%E5%88%A9%E7%94%A8Github%20Actions%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%20Hexo%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="Github-Action自动化部署是什么"><a href="#Github-Action自动化部署是什么" class="headerlink" title="Github Action自动化部署是什么"></a>Github Action自动化部署是什么</h2><p>简单说，就是把hexo博客编译前的源代码上传到github代码仓库，Action在代码发生变动的时候，自动通过安装一系列nodejs环境和相关依赖，编译生成html页面到github pages仓库。</p><p>再简单点说，就是把本地生成博客的工作，全部交给Action执行。</p><p>好处就是随时随地都能修改或增加博文</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><a href="https://1422756921.github.io/">https://1422756921.github.io/</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前搭建的hexo到现在都没怎么看过，今天准备清理电脑磁盘的时候就发现了hexo源码，现在有空打算弄个自动化，免得以后不小心删了。使用 GitHub Actions 实现将 Hexo 博客自动编译并发布到 GitHub Pages 上。顺便记录一下</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>做自动化部署前，先搭建好hexo并部署到GitHub pages上（可以参考这篇<a href="https://blog.aerr.cn/825.html">https://blog.aerr.cn/825.html</a></p><p>先建一个私有仓库（myhexo），这个仓库存放的是编译前的文件，也就是你电脑本地的文件，这个仓库是拿来做自动化的</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>也就是一共两个仓库</p><ul><li>一个公有仓库存编译好的hexo（pages仓库，用户名例如是<code>1422756921.github.io</code>）</li><li>一个私有仓库存本地电脑编译前的文件（自动化仓库，用户名是<code>myhexo</code>）</li></ul><h3 id="上传编译前的代码"><a href="#上传编译前的代码" class="headerlink" title="上传编译前的代码"></a>上传编译前的代码</h3><p>创建完私有仓库后，在本地博客文件中复制几个文件到另外一个文件夹，其中包括<code>.github</code>，<code>scaffolds</code>，<code>source</code>，<code>themes</code>，<code>_config.yml</code>，<code>package.json</code>，<code>package-lock.json</code></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-1.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-1.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>还有一个很重要的一步：打开模板文件，把<code>.git</code>文件删除</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-2.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-2.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>然后回到根目录右键打开git bash</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-3.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-3.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>在git bash里依次输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init  <span class="comment">#把这个目录变成Git可以管理的仓库</span></span><br><span class="line">git add .   <span class="comment">#添加当前目录文件到缓存区（别漏命令后面的点）</span></span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span>  <span class="comment">#提交缓存区内容到本地库，并备注first commit</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#下面两条命令二选一，就行了</span></span><br><span class="line">git remote add origin https://github.com/用户名/自动化仓库名.git   <span class="comment">#利用https关联远程仓库</span></span><br><span class="line">git remote add origin git@github.com:用户名/自动化仓库名.git   <span class="comment">#利用ssh关联远程仓库</span></span><br><span class="line"> </span><br><span class="line">git push -u origin master  <span class="comment">#把本地库的所有内容推送到远程库上</span></span><br></pre></td></tr></table></figure><p>同样<code>SSH</code>和<code>HTTPS</code>均可。<code>SSH</code>在绑定过<code>ssh key</code>的设备上无需再输入密码，<code>HTTPS</code>则需要输入密码，但是<code>SSH</code>偶尔会遇到端口占用的情况。</p><h3 id="获取-Github-token"><a href="#获取-Github-token" class="headerlink" title="获取 Github token"></a>获取 Github token</h3><p>打开<a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a><br>点击 Generate new token 新建个 token</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-4.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-4.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>note随便填，Expiration选择No expiration，勾选repo和workflow，其他没什么了，然后点生成就好了</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-5.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-5.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>把token复制下来</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-6.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-6.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>打开自动化仓库的<code>Settings&lt;span&gt; &lt;/span&gt;</code>-&gt; <code>Secrets and variables</code> -&gt; <code>Actions</code> -&gt; <code>New repository secret</code></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-7.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-7.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>一共有三个变量名<code>GITHUBTOKEN</code>，<code>GITHUBUSERNAME</code>，<code>GITHUBEMAIL</code>，逐一添加</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-8.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-8.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-9.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-9.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h5 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h5><table><thead><tr><th>变量名</th><th>常量释义</th></tr></thead><tbody><tr><td>GITHUBMAIL</td><td>Github 用户邮箱地址</td></tr><tr><td>GITHUBTOKEN</td><td>Github token</td></tr><tr><td>GITHUBUSERNAME</td><td>Github 用户名</td></tr></tbody></table><h3 id="添加workflows"><a href="#添加workflows" class="headerlink" title="添加workflows"></a>添加workflows</h3><p>接下来点击<code>Actions&lt;span&gt; &lt;/span&gt;</code>-&gt;  <code>set up a workflow yourself</code></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-10.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-10.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>复制以下代码到里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">name: 自动部署</span><br><span class="line"> </span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line"> </span><br><span class="line">  release:</span><br><span class="line">    types:</span><br><span class="line">      - published</span><br><span class="line"> </span><br><span class="line"><span class="built_in">jobs</span>:</span><br><span class="line">  deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: 检查分支</span><br><span class="line">      uses: actions/checkout@v2</span><br><span class="line">      with:</span><br><span class="line">        ref: main</span><br><span class="line"> </span><br><span class="line">    - name: 安装 Node</span><br><span class="line">      uses: actions/setup-node@v1</span><br><span class="line">      with:</span><br><span class="line">        node-version: <span class="string">&quot;16.x&quot;</span></span><br><span class="line"> </span><br><span class="line">    - name: 安装 Hexo</span><br><span class="line">      run: |</span><br><span class="line">        <span class="built_in">export</span> TZ=<span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line">        npm install hexo-cli -g</span><br><span class="line"> </span><br><span class="line">    - name: 缓存 Hexo</span><br><span class="line">      uses: actions/cache@v1</span><br><span class="line">      id: cache</span><br><span class="line">      with:</span><br><span class="line">        path: node_modules</span><br><span class="line">        key: <span class="variable">$&#123;&#123;runner.OS&#125;</span>&#125;-<span class="variable">$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;</span>&#125;</span><br><span class="line"> </span><br><span class="line">    - name: 安装依赖</span><br><span class="line">      <span class="keyword">if</span>: steps.cache.outputs.cache-hit != <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      run: |</span><br><span class="line">        npm install --save</span><br><span class="line"> </span><br><span class="line">    - name: 生成静态文件</span><br><span class="line">      run: |</span><br><span class="line">        hexo clean</span><br><span class="line">        hexo generate</span><br><span class="line"> </span><br><span class="line">    - name: 部署 <span class="comment">#此处master:master 指从本地的master分支提交到远程仓库的master分支(不是博客的分支写master即可)，若远程仓库没有对应分支则新建一个。如有其他需要，可以根据自己的需求更改。</span></span><br><span class="line">      run: |</span><br><span class="line">        <span class="built_in">cd</span> ./public</span><br><span class="line">        git init</span><br><span class="line">        git config --global user.name <span class="string">&#x27;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&#x27;</span></span><br><span class="line">        git config --global user.email <span class="string">&#x27;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&#x27;</span></span><br><span class="line">        git add .</span><br><span class="line">        git commit -m <span class="string">&quot;<span class="variable">$&#123;&#123; github.event.head_commit.message &#125;</span>&#125; <span class="subst">$(date +<span class="string">&quot;%Z %Y-%m-%d %A %H:%M:%S&quot;</span>)</span> Updated By Github Actions&quot;</span></span><br><span class="line">        git push --force --quiet <span class="string">&quot;https://<span class="variable">$&#123;&#123; secrets.GITHUBUSERNAME &#125;</span>&#125;:<span class="variable">$&#123;&#123; secrets.GITHUBTOKEN &#125;</span>&#125;@github.com/<span class="variable">$&#123;&#123; secrets.GITHUBUSERNAME &#125;</span>&#125;/<span class="variable">$&#123;&#123; secrets.GITHUBUSERNAME &#125;</span>&#125;.github.io.git&quot;</span> master:master  <span class="comment"># GitHub配置</span></span><br><span class="line">        git push --force --quiet <span class="string">&quot;https://<span class="variable">$&#123;&#123; secrets.TOKENUSER &#125;</span>&#125;:<span class="variable">$&#123;&#123; secrets.CODINGTOKEN &#125;</span>&#125;@e.coding.net/<span class="variable">$&#123;&#123; secrets.CODINGUSERNAME &#125;</span>&#125;/<span class="variable">$&#123;&#123;  secrets.CODINGBLOGREPO &#125;</span>&#125;.git&quot;</span> master:master  <span class="comment"># coding配置</span></span><br><span class="line">        git push --force --quiet <span class="string">&quot;https://<span class="variable">$&#123;&#123; secrets.GITEEUSERNAME &#125;</span>&#125;:<span class="variable">$&#123;&#123; secrets.GITEETOKEN &#125;</span>&#125;@gitee.com/<span class="variable">$&#123;&#123; secrets.GITEEUSERNAME &#125;</span>&#125;/<span class="variable">$&#123;&#123; secrets.GITEEUSERNAME &#125;</span>&#125;.git&quot;</span> master:master  <span class="comment"># gitee配置</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>==<strong>上方代码配置包含 gitee 和 coding，请自行删减</strong>==</p><p>粘贴上去后点击Commit changes…</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-11.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-11.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-11.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>就大功告成了，可以点击Actions查看运行进程了</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-12.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-12.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p>最后，需要到GitHub pages那个仓库里面把默认页改成master就好了</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2023/07/image-13.png" title="利用Github Actions自动化部署 Hexo博客"><img src="https://blog.aerr.cn/wp-content/uploads/2023/07/image-13.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2023/07/image-13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2021/11/24/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/11/24/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Hexo是个快速、简洁且高效的博客框架，它是一款基于Node.js的静态博客生成程序，作者是中国台湾tommy351。它的安装运行等甚至生成文章页面 生成目录，网站配置都是在爱代码模式下进行的。还有就是要学会使用Hexo，就得学会使用Git，并且对Git常用基础命令要有所了解，还有就是需要安装Node.js，这个软件是Hexo本地搭建必不可少的工具，值得一提的是Hexo博客可以部署到GitHub、Gitee、GitLab、Coding、七牛，都是完全免费的，可以让你实现免服务器，免域名搭建一个完整的博客。</p><p>Hexo官网：<a href="https://hexo.io/">https://hexo.io</a></p><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h2><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。</p><p>Windows：下载并安装 git：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a><br>对于中国大陆地区用户，可以前往 淘宝 Git for Windows 镜像 下载 git 安装包。</p><p>Linux (Ubuntu, Debian)：sudo apt-get install git-core<br>Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</p><h2 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h2><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><p>windows：打开nodejs：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 选择LTS版本。</p><p>linux：安装完后，打开命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><p>然后检查一下有没有安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><p>然后安装hexo，你可以先创建一个文件夹blog，在这个文件夹下的空白地方，右键git bash打开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>然后初始化hexo，这个hexoblog可以随便填</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexoblog</span><br></pre></td></tr></table></figure><p>用cd进入hexoblig里（或者直接打开这个文件夹，在空白地方右键 git bash打开 ）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexoblog</span><br></pre></td></tr></table></figure><p>这个时候hexoblog文件夹里有指定文件夹目录下有：<br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件<br>db.json：source解析所得到的<br>package.json：项目所需模块项目的配置信息</p><p>然后本地运行测试一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写<br>hexo server 顾名思义，启动服务 本地运行，可以用 hexo s缩写</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/image-26.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/image-26.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>在浏览器输入 localhost:4000 就可以看到你生成的博客了。</p><p>使用ctrl+c可以把服务关掉。</p><h2 id="4-在GitHub创建一个放博客文件的仓库"><a href="#4-在GitHub创建一个放博客文件的仓库" class="headerlink" title="4.在GitHub创建一个放博客文件的仓库"></a>4.在GitHub创建一个放博客文件的仓库</h2><p>GitHub官网：<a href="https://github.com/">https://github.com/</a></p><p>没有账号的注册一个，登录后，点击右上角New repository</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/image-22.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/image-22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxx.github.io，其中xxx就是你注册GitHub的用户名。我这里是已经建过了。点击create repository。</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/image-25.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/image-25.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h2 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h2><p>在博客根目录 右键点击 Git Bash Here</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/image-23.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/image-23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>yourname输入你GitHub用户名，youremail输入你GitHub的邮箱。（在双引号里面输入，双引号别删）</p><p>检查一下你有没有输对</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>输入下面命令（ youremail 是GitHub邮箱）创建SSH ，然后一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>在你的C盘中找到这个文件夹。打开 id_rsa.pub</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/image-24.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/image-24.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>点击GitHub的右上角setting中 -&gt; 点击左边SSH and GPG keys -&gt; 点击New SSH key<br>title随便填，把C盘的id_rsa.pub里面的信息复制到key里。</p><p><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/image-27-1024x700.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/image-27-1024x700.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/5YK2Z@784I3BG3Y6IX-1024x604.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/5YK2Z@784I3BG3Y6IX-1024x604.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><img src="https://blog.aerr.cn/wp-content/uploads/2021/11/OI2Y6UYX1Z60SMYUN-1024x629.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/11/OI2Y6UYX1Z60SMYUN-1024x629.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>回到git bash中，查看是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>这个时候要输入一次yes，然后再回车</p><h2 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h2><p>打开站点配置文件 _config.yml，拉到最后，修改为<br>1422756921就是你的GitHub账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:1422756921/1422756921.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>注意：现在GitHub的默认分支已经是main了，不是master ！！！！</p><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>其中 hexo clean清除了你之前生成的东西<br>hexo deploy 部署文章，可以用hexo d缩写</p><p>输入hexo deploy之后会出现一个小弹窗，要你输入GitHub的username和password。（用户名是邮箱）</p><p>过一会儿就可以在<a href="https://1422756921.github.io/">https://1422756921.github.io</a> 这个网站看到你的博客了！</p><p>关于站点文件配置请参考官方文档：<a href="https://hexo.io/zh-cn/docs/configuration.html">https://hexo.io/zh-cn/docs/configuration.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>把博客从GitHub迁移到Gitee</title>
      <link href="/2021/11/22/%E6%8A%8A%E5%8D%9A%E5%AE%A2%E4%BB%8EGitHub%E8%BF%81%E7%A7%BB%E5%88%B0Gitee/"/>
      <url>/2021/11/22/%E6%8A%8A%E5%8D%9A%E5%AE%A2%E4%BB%8EGitHub%E8%BF%81%E7%A7%BB%E5%88%B0Gitee/</url>
      
        <content type="html"><![CDATA[<h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>Github是基于 Git 做版本控制的代码托管平台，同时也是全球最大的代（同）码（性）托（交）管（友）网站。<br>喜欢用GitHub的都知道，时常出现抽风现象，包括Pages功能也是<br>如果你把网站托管到GitHub上，某天你想让用户浏览，用户跟你反映打开特别慢或者直接打不开，你能忍？shi都能吃，好吧<br>就因为前几天刚搭建完Hexo博客后想分享给别人浏览，然而有些人反馈说打开慢的要死。<br>换作是我，20秒都还没打开的网页，我直接退出去，反正我受不了<br>GitHub：<a href="https://1422756921.github.io/">https://1422756921.github.io</a> 迁移到 Gitee：<a href="https://a1422756921.gitee.io/">https://a1422756921.gitee.io</a></p><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><p>打开Gitee官网，选择导入Github仓库，找到GitHub那个博客仓库，导入到开通了Pages的gitee仓库里面<br><img src="https://gitee.com/a1422756921/fontawesome/raw/main/NKKLD~1%7DO$~%60T04(WIM1XJ1.png" class="lazyload placeholder" data-srcset="https://gitee.com/a1422756921/fontawesome/raw/main/NKKLD~1%7DO$~%60T04(WIM1XJ1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h2 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h2><p>Gitee开通Pages服务要手持身份证实名的，但Gitee在国内的访问体验是一流的<br>经过这两天的体验和测试，发现ping值都是在50ms左右，丢包率为零<br><img src="https://gitee.com/a1422756921/fontawesome/raw/main/(QHNADAWZQT81A67LKAIRV5.png" class="lazyload placeholder" data-srcset="https://gitee.com/a1422756921/fontawesome/raw/main/(QHNADAWZQT81A67LKAIRV5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>体验因地域、网络提供商而异，Gitee 在国内无论在访问速度还是稳定性上都非常优秀</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于博客的事</title>
      <link href="/2021/11/20/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BA%8B/"/>
      <url>/2021/11/20/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo博客"><a href="#Hexo博客" class="headerlink" title="Hexo博客"></a>Hexo博客</h2><p>Hello，这里是青云依兮的Hexo博客，是我所有站点中唯一一个不怕被攻击的</p><p>Hexo是个快速、简洁且高效的博客框架，它是一款基于Node.js的静态博客生成程序，作者是中国台湾tommy351。</p><p>它的安装运行等甚至生成文章页面 生成目录，网站配置都是在爱代码模式下进行的。还有就是要学会使用Hexo，就得学会使用Git，并且对Git常用基础命令要有所了解，还有就是需要安装Node.js，这个软件是Hexo本地搭建必不可少的工具，值得一提的是Hexo博客可以部署到GitHub、Gitee、GitLab、Coding、七牛，都是完全免费的，可以让你实现免服务器，免域名搭建一个完整的博客。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/18/hello-world/"/>
      <url>/2021/11/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>v2节点搭建教程</title>
      <link href="/2021/09/26/v2%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2021/09/26/v2%E8%8A%82%E7%82%B9%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><strong>前言：</strong></h2><p><strong>科学上网有什么用？？当然是查阅资料学习啊！！</strong></p><h2 id="前提准备："><a href="#前提准备：" class="headerlink" title="前提准备："></a>前<strong>提准备：</strong></h2><p><strong>①一台海外服务器（系统：CentOS/debian/ubuntu ）</strong></p><p><strong>②一个ssh工具</strong></p><p><strong>③v2ray一键安装脚本（文章有）</strong></p><p><strong>④ 安卓或者PC的客户端（文末）</strong></p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a><strong>正文：</strong></h2><p><strong>v2ary官网：<a href="https://www.v2ray.com/">https://www.v2ray.com</a>（需要科学上网）</strong></p><p><strong>我现在用CentOS 7.8系统做演示，</strong>美国硅谷1核1G10m，大陆优化路线*<em><strong>，</strong>配置低的建议使用Debian</em>*</p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/image.png" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/image-1024x582.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/image-1024x582.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><hr><p><strong>一键安装简单快速 最适合小白了</strong>（==推荐直接安装文章末尾的x-ui==）</p><p><strong>文字教程：</strong></p><p><strong>使用ssh连接服务器后，输入下面安装脚本命令后回车：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># v2一键脚本</span><br><span class="line">bash &lt;(curl -s -L https://raw.githubusercontent.com/233boy/v2ray/master/install.sh)</span><br></pre></td></tr></table></figure><p>Plain text</p><p><strong>如果提示 curl: command not found ，那是因为你的 VPS 没装 Curl<br>ubuntu/debian 系统安装 Curl 方法: <code>apt-get update -y &amp;&amp; apt-get install curl -y</code><br>centos 系统安装 Curl 方法: <code>yum update -y &amp;&amp; yum install curl -y</code><br>安装好 curl 之后就能安装脚本了</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">关于Ubuntu可能会出现的错误 </span><br><span class="line"></span><br><span class="line"># 错误一、当你输入安装脚本命令时出现：请使用root用户运行的时候在安装命令前加</span><br><span class="line">sudo</span><br><span class="line"></span><br><span class="line"># 错误二、当在前面加sudo运行出现：bash: /dev/fd/63: No such file or directory请输入</span><br><span class="line">bash &lt; &lt;(curl -s -L https://git.io/v2ray.sh)</span><br><span class="line"></span><br><span class="line"># 错误三、当上面命令出现无限循环时请切换root用户：（设置root密码并切换）</span><br><span class="line"># 设置root密码</span><br><span class="line">sudo passwd root</span><br><span class="line"></span><br><span class="line"># 这里自定义设置密码</span><br><span class="line"></span><br><span class="line"># 切换root用户</span><br><span class="line">su</span><br><span class="line"></span><br><span class="line"># 输入密码，然后再执行</span><br><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure><p>Plain text</p><p><strong>看不懂的建议全部回车选择默认配置</strong></p><p><strong>①输入1，安装，回车<br>②输入2，TCP_HTTP，回车<br>③选择80端口，回车<br>④输入y，开启广告拦截，回车<br>⑤输入y，配置Shadowsocks，回车<br>⑥选择88端口，回车<br>⑦随便输入密码，回车<br>⑧选择2，加密协议，回车<br>⑨回车确定安装<br>………..然后就是漫长的等待<br>安装完成后，输入v2ray url，回车<br>复制vmess…这一串链接（包括vmess）</strong></p><hr><p><strong>图文教程：</strong></p><p><strong>看不懂的建议全部回车选择默认配置</strong></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_213754-1.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_213754-1-1024x345.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_213754-1-1024x345.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_213858-2.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_213858-2-913x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_213858-2-913x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214023-1.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214023-1-479x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214023-1-479x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214140-1.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214140-1-480x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214140-1-480x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214551-1.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214551-1-475x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_214551-1-475x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_220154.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_220154-476x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_220154-476x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_220138-1.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_220138-1-478x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_220138-1-478x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><strong>现在可以输入 <code>v2ray</code> 回车，即可管理 V2Ray</strong></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/7PJ173XOAZ32MVAI7I8.png" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/7PJ173XOAZ32MVAI7I8.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/7PJ173XOAZ32MVAI7I8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><h2 id="安装bbr"><a href="#安装bbr" class="headerlink" title="安装bbr"></a>安装bbr</h2><p>脚本一：（最近还在更新）</p><p>GitHub：<a href="https://github.com/jinwyp/one_click_script">https://github.com/jinwyp/one_click_script</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://git.io/kernel.sh)</span><br></pre></td></tr></table></figure><p>Plain text</p><p>脚本二：（最近还在更新）</p><p>GitHub：<a href="https://github.com/kuoruan/shell-scripts">https://github.com/kuoruan/shell-scripts</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># openvz安装bbr</span><br><span class="line">wget https://raw.githubusercontent.com/kuoruan/shell-scripts/master/ovz-bbr/ovz-bbr-installer.sh</span><br><span class="line">chmod +x ovz-bbr-installer.sh</span><br><span class="line">./ovz-bbr-installer.sh</span><br><span class="line"></span><br><span class="line"># 卸载bbr</span><br><span class="line">sh ovz-bbr-installer.sh uninstall</span><br></pre></td></tr></table></figure><p>Plain text</p><p>脚本三：</p><p>Github：<a href="https://github.com/ylx2016/Linux-NetSpeed/">https://github.com/ylx2016/Linux-NetSpeed/</a></p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># centos</span><br><span class="line">yum install ca-certificates wget -y &amp;&amp; update-ca-trust force-enable</span><br><span class="line"></span><br><span class="line"># debian/ubuntu</span><br><span class="line">apt-get install ca-certificates wget -y &amp;&amp; update-ca-certificates</span><br></pre></td></tr></table></figure><p>Plain text</p><p>不想卸载linux内核和快速适用bbr请使用不卸载内核版本</p><h3 id="不卸载内核版本"><a href="#不卸载内核版本" class="headerlink" title="不卸载内核版本"></a>不卸载内核版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O tcpx.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcpx.sh&quot; &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh</span><br></pre></td></tr></table></figure><p>Plain text</p><h3 id="卸载内核版本"><a href="#卸载内核版本" class="headerlink" title="卸载内核版本"></a>卸载内核版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O tcp.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>Plain text</p><h3 id="bbr模块的选择"><a href="#bbr模块的选择" class="headerlink" title="bbr模块的选择"></a>bbr模块的选择</h3><p>如果可以，请选择bbrplus+fq，bbr2不建议安装不稳定，魔改的bbr也是不推荐安装，使用bbr+fq或者bbrplus+fq就行，bbr+cake也行，我们还是推荐bbrplus+fq，经过测试bbrplus+fq是最好的，稳定，速度提升明显。</p><h2 id="centos7关闭默认firewalld防火墙"><a href="#centos7关闭默认firewalld防火墙" class="headerlink" title="centos7关闭默认firewalld防火墙"></a>centos7关闭默认firewalld防火墙</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看防火墙状态</span><br><span class="line">systemctl status firewalld.service</span><br><span class="line"></span><br><span class="line"># 关闭防火墙</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"></span><br><span class="line"># 禁止firewall开机启动</span><br><span class="line"></span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><p>Plain text</p><hr><h2 id="安卓连接教程："><a href="#安卓连接教程：" class="headerlink" title="安卓连接教程："></a>安卓连接教程：</h2><p>下<strong>载安卓的v2ary后打开（软件链接在文末）</strong></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223556.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223556-461x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223556-461x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223638.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223638-461x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223638-461x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223805.jpg" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223805-461x1024.jpg" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/IMG_20210925_223805-461x1024.jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><strong>然后就可以科学上网考研了</strong></p><hr><h2 id="电脑连接教程："><a href="#电脑连接教程：" class="headerlink" title="电脑连接教程："></a>电脑连接教程：</h2><p><strong>下载Windows的压缩包解压，运行v2rayN.exe（软件在文末）</strong></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/067@A8RQOP35BDU_G.png" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/067@A8RQOP35BDU_G.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/067@A8RQOP35BDU_G.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><a href="https://blog.aerr.cn/wp-content/uploads/2021/09/@WXEKZM2_KZ3NU.png" title="V2Ray 搭建教程（科学上网）"><img src="https://blog.aerr.cn/wp-content/uploads/2021/09/@WXEKZM2_KZ3NU.png" class="lazyload placeholder" data-srcset="https://blog.aerr.cn/wp-content/uploads/2021/09/@WXEKZM2_KZ3NU.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></a></p><p><strong>然后就可以科学上网学习了</strong></p><h2 id="安卓和PC的客户端："><a href="#安卓和PC的客户端：" class="headerlink" title="安卓和PC的客户端："></a><strong>安卓和PC的客户端：</strong></h2><p><strong>关注微信公众号“==青云依兮==”，发送“==v2客户端==”获取下载地址</strong></p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="TCP-阻断"><a href="#TCP-阻断" class="headerlink" title="TCP 阻断"></a>TCP 阻断</h3><p>如果你觉得你的小鸡出现了这种情况，那么可以尝试使用 UDP 协议相关的 mKCP<br>当然，用了我的脚本那是很简单的啦，直接输入 <code>v2ray config</code> 然后选择修改 V2Ray 传输协议<br>之后再选择 mKCP 相关的就行咯<br>备注：使用 mKCP 或许还可以提高速度，但由于 UDP 的原因也许会被运营商 Qos，这是无解的。</p><h3 id="快速管理-V2Ray"><a href="#快速管理-V2Ray" class="headerlink" title="快速管理 V2Ray"></a>快速管理 V2Ray</h3><p><code>v2ray info</code> 查看 V2Ray 配置信息<br><code>v2ray config</code> 修改 V2Ray 配置<br><code>v2ray link</code> 生成 V2Ray 配置文件链接<br><code>v2ray infolink</code> 生成 V2Ray 配置信息链接<br><code>v2ray qr</code> 生成 V2Ray 配置二维码链接<br><code>v2ray ss</code> 修改 Shadowsocks 配置<br><code>v2ray ssinfo</code> 查看 Shadowsocks 配置信息<br><code>v2ray ssqr</code> 生成 Shadowsocks 配置二维码链接<br><code>v2ray status</code> 查看 V2Ray 运行状态<br><code>v2ray start</code> 启动 V2Ray<br><code>v2ray stop</code> 停止 V2Ray<br><code>v2ray restart</code> 重启 V2Ray<br><code>v2ray log</code> 查看 V2Ray 运行日志<br><code>v2ray update</code> 更新 V2Ray<br><code>v2ray update.sh</code> 更新 V2Ray 管理脚本<br><code>v2ray uninstall</code> 卸载 V2Ray</p><h3 id="优化-V2Ray"><a href="#优化-V2Ray" class="headerlink" title="优化 V2Ray"></a>优化 V2Ray</h3><p>由于本人的脚本在 Debian9 系统会自动开启 BBR 优化加速了，所以不需要再安装 BBR 优化了，<br>如果你还是觉得网络比较慢的话，你可以尝试使用含有 mKCP 的传输协议，这个 mKCP 的东东，简单一点说就像 Kcptun 一样加速，并且还能进行伪装 (可选)，但是由于 mKCP 是使用 UDP 协议的，也许运营商会限速得更加厉害，网络变得更加慢。但不管怎么样，你都可以随时尝试一下。<br>服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，再接着选择 mKCP 相关的传输协议即可<br>如果你是使用其他商家的 VPS 并且是按照此教程流程来安装 V2Ray 的话，那么你可以输入 <code>v2ray bbr</code> 回车，然后选择安装 BBR 或者 锐速 来优化 V2Ray<br>只是还想再啰嗦一下，如果你是使用国际大厂的 VPS，并且是按照此教程流程来安装 V2Ray 的话，请自行在安全组 (防火墙) 开放端口和 UDP 协议 (如果你要使用含有 mKCP 的传输协议)</p><h3 id="WebSocket-TLS"><a href="#WebSocket-TLS" class="headerlink" title="WebSocket + TLS"></a>WebSocket + TLS</h3><p>实现 WebSocket + TLS 超级无敌简单，前提是要拥有一个能正常解析的域名 (并且知道怎么解析域名)<br>服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，再选择 WebSocket + TLS，即是输入 4，接着输入你的域名，然后我都懒得说了，脚本都那么简单明了，我还瞎BB干嘛…<br>哈哈…可能有不少人在折腾 V2Ray 实现 WS + TLS 的时候真的是搞到很蛋痛咯，有些人的教程可能说得不是很清楚，或者是直接忽略小白萌新这些亲爱的用户，嗯，小白们好好加油吧，请尽量多学一些基础知识，别总是做伸手党，对于毫无交集的陌生人，人家并没有任何义务要帮你的啊<br>偷偷跟你说…使用 WebSocket + TLS 会有断流的问题<br>多说一句，不要被某些人带节奏，WS + TLS 并不是 V2Ray 的神级配置，该墙还是会墙，墙你不需要理由<br>备注一下啦，这里我没写怎么教你注册域名啦，怎么解析域名啦，如果你真的想要使用 WebSocket + TLS，那就 自己谷歌摸索一下，其实好简单的啦！<br>我本人并没有在使用 WS + TLS (WebSocket + TLS)，我用 TCP，就是用一键脚本全程回车的那种懒人</p><h3 id="HTTP-2"><a href="#HTTP-2" class="headerlink" title="HTTP/2"></a>HTTP/2</h3><p>实现 HTTP/2 (h2) 也超级无敌简单，和 WebSocket + TLS 一样，也就是只要一个域名就够<br>服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，再选择 HTTP/2，即是输入 16，然后………看上面的 WebSocket + TLS 的相关。<br>备注一下，HTTP/2 相比 WS + TLS (WebSocket + TLS) ，在浏览网页时有一些优势。速度是差不多的啦</p><h3 id="mKCP"><a href="#mKCP" class="headerlink" title="mKCP"></a>mKCP</h3><p>mKCP 这个东东其实就是 KCP 协议，反正你知道是能提速的就行，但是不保证都能提速，还能避免 TCP 阻断，但是也可以会被运营商 Qos.<br>使用方法：服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，之后再选择 mKCP 相关的就行</p><h3 id="Telegram-专用代理"><a href="#Telegram-专用代理" class="headerlink" title="Telegram 专用代理"></a>Telegram 专用代理</h3><blockquote><p>重要提醒：不建议使用 V2Ray 的 MTProto 代理！<br>推荐使用： <a href="https://github.com/cutelua/mtg-dist">https://github.com/cutelua/mtg-dist</a></p></blockquote><p><del>如果你在使用 Telegram 的话，你可以配置一个 Telegram 的专用代理，这样来，在某些情况下你就不需要再开一个代理软件了。<br>输入 <code>v2ray tg</code> 即可配置 TG 专用代理<br>配置 Telegram MTProto</del></p><p><a href="https://camo.githubusercontent.com/8d81d1a89215d09c0ecc6b104a4e6410de34499feefcba0bfa54312710586761/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438656137342e6a7067"><img src="https://camo.githubusercontent.com/8d81d1a89215d09c0ecc6b104a4e6410de34499feefcba0bfa54312710586761/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438656137342e6a7067" class="lazyload placeholder" data-srcset="https://camo.githubusercontent.com/8d81d1a89215d09c0ecc6b104a4e6410de34499feefcba0bfa54312710586761/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438656137342e6a7067" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="配置Telegram MTProto"></a></p><p><del>Telegram MTProto 配置信息</del></p><p><a href="https://camo.githubusercontent.com/d6cd8b9f11e813426e671ed5e4f6063672a93e377eee4e978fe07ea05bde300e/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438613130662e6a7067"><img src="https://camo.githubusercontent.com/d6cd8b9f11e813426e671ed5e4f6063672a93e377eee4e978fe07ea05bde300e/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438613130662e6a7067" class="lazyload placeholder" data-srcset="https://camo.githubusercontent.com/d6cd8b9f11e813426e671ed5e4f6063672a93e377eee4e978fe07ea05bde300e/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438613130662e6a7067" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" alt="Telegram MTProto 配置信息"></a></p><h3 id="V2Ray-多用户"><a href="#V2Ray-多用户" class="headerlink" title="V2Ray 多用户"></a>V2Ray 多用户</h3><p>目前此 V2Ray 一键脚本只支持配置一个 V2Ray 账号…一个 Shadowsocks 账号<br>说着当然，如果你是大佬，配置 多用户 这种事，不是分分钟的事么？</p><h3 id="查看配置-修改配置-端口-传输协议……-？"><a href="#查看配置-修改配置-端口-传输协议……-？" class="headerlink" title="查看配置 / 修改配置 / 端口 / 传输协议…… ？"></a>查看配置 / 修改配置 / 端口 / 传输协议…… ？</h3><p>请看上面的快速管理。。。或者直接输入 <code>v2ray</code> 回车，找到你想要执行的功能。</p><h3 id="哪个传输协议好？"><a href="#哪个传输协议好？" class="headerlink" title="哪个传输协议好？"></a>哪个传输协议好？</h3><p>心中无杂念，用 TCP<br>ISP 常作怪，用 动态端口<br>小鸡速度不好，用 mKCP<br>处子之身，用 WS + TLS</p><h2 id="安卓和PC的客户端：-1"><a href="#安卓和PC的客户端：-1" class="headerlink" title="安卓和PC的客户端："></a>安卓和PC的客户端：</h2><p>关注微信公众号“==青云依兮==”，发送“==v2客户端==”获取下载地址</p><p><strong>访问不了可以参考这个文章：<a href="https://blog.aerr.cn/226.html">Github访问不了解决方法</a></strong></p><p>本文关键词：vpn，梯子，翻墙，爬梯，科学上网</p><h2 id="x-ui（带面板，推荐）"><a href="#x-ui（带面板，推荐）" class="headerlink" title="x-ui（带面板，推荐）"></a>x-ui（带面板，推荐）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># x-ui（停更）</span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br><span class="line"></span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br><span class="line"></span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/yonggekkk/x-ui-yg/main/install.sh)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 3x-ui（最近有更新，功能多，推荐）</span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
